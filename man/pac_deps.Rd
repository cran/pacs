% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deps.R
\name{pac_deps}
\alias{pac_deps}
\title{Package dependencies}
\usage{
pac_deps(
  pac,
  fields = c("Depends", "Imports", "LinkingTo"),
  lib.loc = .libPaths(),
  base = FALSE,
  local = TRUE,
  description_v = FALSE,
  attr = TRUE,
  recursive = TRUE,
  repos = biocran_repos()
)
}
\arguments{
\item{pac}{\code{character} a package name.}

\item{fields}{\code{character} vector listing the types of dependencies, a subset of \code{c("Depends", "Imports", "LinkingTo", "Suggests", "Enhances")}.
Character string "all" is shorthand for that vector, character string "most" for the same vector without "Enhances", character string "strong" (default) for the first three elements of that vector.
Default: \code{c("Depends", "Imports", "LinkingTo")}}

\item{lib.loc}{\code{character} vector of search paths with local packages. Default: \code{.libPaths()}}

\item{base}{\code{logical} if to add base packages too. If \code{TRUE} then \code{pacs::pacs_base()} are taken into account. Default: \code{FALSE}}

\item{local}{logical if to use local repository (or newest remote packages). Default: TRUE}

\item{description_v}{\code{logical} if the dependencies version should be taken from description files, minimal required. By default installed versions are taken. Default: \code{FALSE}}

\item{attr}{\code{logical} if a package and its version should be added as an attribute of data.frame or for FALSE as an additional record. Default: TRUE}

\item{recursive}{\code{logical} if to assess the dependencies recursively. Default: TRUE}

\item{repos}{\code{character} vector of repositories URLs to use. By default checking CRAN and newest Bioconductor per R version. Default \code{pacs::biocran_repos()}}
}
\value{
\code{data.frame} with packages and their versions. Versions are taken from \code{installed.packages} or newest released.
}
\description{
Package dependencies from DESCRIPTION files with installed or expected versions or newest released.
}
\note{
When function is invoked in the loop afterwards results could be aggregated like,
\code{stats::aggregate(results[, c("Version"), drop = FALSE], list(Package = results$Package), pacs::compareVersionsMax)}.
}
\examples{
\dontrun{
pacs::pac_deps("stats", base = TRUE)$Package
pacs::pac_deps("memoise")$Package
pacs::pac_deps("memoise", description_v = FALSE)
# raw dependencies from DESCRIPTION file
pacs::pac_deps("memoise", description_v = TRUE, recursive = FALSE)
# raw dependencies from DESCRIPTION file - last release
pacs::pac_deps("memoise", description_v = TRUE, local = FALSE, recursive = FALSE)
}
}
