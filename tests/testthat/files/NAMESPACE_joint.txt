# Generated by roxygen2: do not edit by hand

S3method("$",mockclientdata)
S3method("$",reactivevalues)
S3method("$",session_proxy)
S3method("$",shinyoutput)
S3method("$<-",reactivevalues)
S3method("$<-",session_proxy)
S3method("$<-",shinyoutput)
S3method("[",mockclientdata)
S3method("[",reactivevalues)
S3method("[",shinyoutput)
S3method("[<-",reactivevalues)
S3method("[<-",shinyoutput)
S3method("[[",mockclientdata)
S3method("[[",reactivevalues)
S3method("[[",session_proxy)
S3method("[[",shinyoutput)
S3method("[[<-",reactivevalues)
S3method("[[<-",shinyoutput)
S3method("names<-",reactivevalues)
S3method(as.list,reactivevalues)
S3method(as.shiny.appobj,character)
S3method(as.shiny.appobj,list)
S3method(as.shiny.appobj,shiny.appobj)
S3method(as.tags,shiny.appobj)
S3method(as.tags,shiny.render.function)
S3method(bindCache,"function")
S3method(bindCache,Observer)
S3method(bindCache,default)
S3method(bindCache,reactive.cache)
S3method(bindCache,reactive.event)
S3method(bindCache,reactiveExpr)
S3method(bindCache,shiny.render.function)
S3method(bindCache,shiny.render.function.cache)
S3method(bindCache,shiny.render.function.event)
S3method(bindCache,shiny.renderPlot)
S3method(bindEvent,Observer)
S3method(bindEvent,Observer.event)
S3method(bindEvent,default)
S3method(bindEvent,reactive.event)
S3method(bindEvent,reactiveExpr)
S3method(bindEvent,shiny.render.function)
S3method(format,reactiveExpr)
S3method(format,reactiveVal)
S3method(names,reactivevalues)
S3method(print,reactive)
S3method(print,reactivevalues)
S3method(print,shiny.appobj)
S3method(print,shiny.render.function)
S3method(print,shiny_runtests)
S3method(str,reactivevalues)
export("conditionStackTrace<-")
export(..stacktraceoff..)
export(..stacktraceon..)
export(HTML)
export(MockShinySession)
export(NS)
export(Progress)
export(a)
export(absolutePanel)
export(actionButton)
export(actionLink)
export(addResourcePath)
export(animationOptions)
export(appendTab)
export(as.shiny.appobj)
export(basicPage)
export(bindCache)
export(bindEvent)
export(bookmarkButton)
export(bootstrapLib)
export(bootstrapPage)
export(br)
export(browserViewer)
export(brushOpts)
export(brushedPoints)
export(callModule)
export(captureStackTraces)
export(checkboxGroupInput)
export(checkboxInput)
export(clickOpts)
export(code)
export(column)
export(conditionStackTrace)
export(conditionalPanel)
export(createRenderFunction)
export(createWebDependency)
export(dataTableOutput)
export(dateInput)
export(dateRangeInput)
export(dblclickOpts)
export(debounce)
export(devmode)
export(dialogViewer)
export(diskCache)
export(div)
export(downloadButton)
export(downloadHandler)
export(downloadLink)
export(em)
export(enableBookmarking)
export(eventReactive)
export(exportTestValues)
export(exprToFunction)
export(extractStackTrace)
export(fileInput)
export(fillCol)
export(fillPage)
export(fillRow)
export(fixedPage)
export(fixedPanel)
export(fixedRow)
export(flowLayout)
export(fluidPage)
export(fluidRow)
export(formatStackTrace)
export(freezeReactiveVal)
export(freezeReactiveValue)
export(getCurrentOutputInfo)
export(getCurrentTheme)
export(getDefaultReactiveDomain)
export(getQueryString)
export(getShinyOption)
export(getUrlHash)
export(get_devmode_option)
export(h1)
export(h2)
export(h3)
export(h4)
export(h5)
export(h6)
export(headerPanel)
export(helpText)
export(hideTab)
export(hoverOpts)
export(hr)
export(htmlOutput)
export(htmlTemplate)
export(httpResponse)
export(icon)
export(imageOutput)
export(img)
export(in_devmode)
export(incProgress)
export(includeCSS)
export(includeHTML)
export(includeMarkdown)
export(includeScript)
export(includeText)
export(inputPanel)
export(insertTab)
export(insertUI)
export(installExprFunction)
export(invalidateLater)
export(is.key_missing)
export(is.reactive)
export(is.reactivevalues)
export(is.shiny.appobj)
export(is.singleton)
export(isRunning)
export(isTruthy)
export(isolate)
export(key_missing)
export(loadSupport)
export(mainPanel)
export(makeReactiveBinding)
export(markRenderFunction)
export(markdown)
export(maskReactiveContext)
export(memoryCache)
export(modalButton)
export(modalDialog)
export(moduleServer)
export(navbarMenu)
export(navbarPage)
export(navlistPanel)
export(nearPoints)
export(need)
export(ns.sep)
export(numericInput)
export(observe)
export(observeEvent)
export(onBookmark)
export(onBookmarked)
export(onFlush)
export(onFlushed)
export(onReactiveDomainEnded)
export(onRestore)
export(onRestored)
export(onSessionEnded)
export(onStop)
export(outputOptions)
export(p)
export(pageWithSidebar)
export(paneViewer)
export(parseQueryString)
export(passwordInput)
export(plotOutput)
export(plotPNG)
export(pre)
export(prependTab)
export(printError)
export(printStackTrace)
export(quoToFunction)
export(radioButtons)
export(reactive)
export(reactiveConsole)
export(reactiveFileReader)
export(reactivePlot)
export(reactivePoll)
export(reactivePrint)
export(reactiveTable)
export(reactiveText)
export(reactiveTimer)
export(reactiveUI)
export(reactiveVal)
export(reactiveValues)
export(reactiveValuesToList)
export(reactlog)
export(reactlogReset)
export(reactlogShow)
export(registerInputHandler)
export(registerThemeDependency)
export(removeInputHandler)
export(removeModal)
export(removeNotification)
export(removeResourcePath)
export(removeTab)
export(removeUI)
export(renderCachedPlot)
export(renderDataTable)
export(renderImage)
export(renderPlot)
export(renderPrint)
export(renderTable)
export(renderText)
export(renderUI)
export(repeatable)
export(req)
export(resourcePaths)
export(restoreInput)
export(runApp)
export(runExample)
export(runGadget)
export(runGist)
export(runGitHub)
export(runTests)
export(runUrl)
export(safeError)
export(selectInput)
export(selectizeInput)
export(serverInfo)
export(setBookmarkExclude)
export(setProgress)
export(setSerializer)
export(shinyApp)
export(shinyAppDir)
export(shinyAppFile)
export(shinyAppTemplate)
export(shinyOptions)
export(shinyServer)
export(shinyUI)
export(showBookmarkUrlModal)
export(showModal)
export(showNotification)
export(showReactLog)
export(showTab)
export(sidebarLayout)
export(sidebarPanel)
export(singleton)
export(sizeGrowthRatio)
export(sliderInput)
export(snapshotExclude)
export(snapshotPreprocessInput)
export(snapshotPreprocessOutput)
export(span)
export(splitLayout)
export(stopApp)
export(strong)
export(submitButton)
export(suppressDependencies)
export(tabPanel)
export(tabPanelBody)
export(tableOutput)
export(tabsetPanel)
export(tag)
export(tagAppendAttributes)
export(tagAppendChild)
export(tagAppendChildren)
export(tagGetAttribute)
export(tagHasAttribute)
export(tagList)
export(tagSetChildren)
export(tags)
export(testServer)
export(textAreaInput)
export(textInput)
export(textOutput)
export(throttle)
export(titlePanel)
export(uiOutput)
export(updateActionButton)
export(updateActionLink)
export(updateCheckboxGroupInput)
export(updateCheckboxInput)
export(updateDateInput)
export(updateDateRangeInput)
export(updateNavbarPage)
export(updateNavlistPanel)
export(updateNumericInput)
export(updateQueryString)
export(updateRadioButtons)
export(updateSelectInput)
export(updateSelectizeInput)
export(updateSliderInput)
export(updateTabsetPanel)
export(updateTextAreaInput)
export(updateTextInput)
export(updateVarSelectInput)
export(updateVarSelectizeInput)
export(urlModal)
export(validate)
export(validateCssUnit)
export(varSelectInput)
export(varSelectizeInput)
export(verbatimTextOutput)
export(verticalLayout)
export(wellPanel)
export(withLogErrors)
export(withMathJax)
export(withProgress)
export(withReactiveDomain)
export(withTags)
export(with_devmode)
import(R6)
import(htmltools)
import(httpuv)
import(methods)
import(mime)
import(xtable)
importFrom(digest,digest)
importFrom(ellipsis,check_dots_empty)
importFrom(ellipsis,check_dots_unnamed)
importFrom(fastmap,fastmap)
importFrom(fastmap,is.key_missing)
importFrom(fastmap,key_missing)
importFrom(grDevices,dev.cur)
importFrom(grDevices,dev.set)
importFrom(htmltools,HTML)
importFrom(htmltools,a)
importFrom(htmltools,br)
importFrom(htmltools,code)
importFrom(htmltools,div)
importFrom(htmltools,em)
importFrom(htmltools,h1)
importFrom(htmltools,h2)
importFrom(htmltools,h3)
importFrom(htmltools,h4)
importFrom(htmltools,h5)
importFrom(htmltools,h6)
importFrom(htmltools,hr)
importFrom(htmltools,htmlTemplate)
importFrom(htmltools,img)
importFrom(htmltools,includeCSS)
importFrom(htmltools,includeHTML)
importFrom(htmltools,includeMarkdown)
importFrom(htmltools,includeScript)
importFrom(htmltools,includeText)
importFrom(htmltools,is.singleton)
importFrom(htmltools,p)
importFrom(htmltools,pre)
importFrom(htmltools,singleton)
importFrom(htmltools,span)
importFrom(htmltools,strong)
importFrom(htmltools,suppressDependencies)
importFrom(htmltools,tag)
importFrom(htmltools,tagAppendAttributes)
importFrom(htmltools,tagAppendChild)
importFrom(htmltools,tagAppendChildren)
importFrom(htmltools,tagGetAttribute)
importFrom(htmltools,tagHasAttribute)
importFrom(htmltools,tagList)
importFrom(htmltools,tagSetChildren)
importFrom(htmltools,tags)
importFrom(htmltools,validateCssUnit)
importFrom(htmltools,withTags)
importFrom(lifecycle,deprecated)
importFrom(promises,"%...!%")
importFrom(promises,"%...>%")
importFrom(promises,as.promise)
importFrom(promises,is.promising)
importFrom(promises,promise)
importFrom(promises,promise_reject)
importFrom(promises,promise_resolve)
importFrom(rlang,"%||%")
importFrom(rlang,as_function)
importFrom(rlang,as_quosure)
importFrom(rlang,enexpr)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
importFrom(rlang,enquos0)
importFrom(rlang,eval_tidy)
importFrom(rlang,expr)
importFrom(rlang,get_env)
importFrom(rlang,get_expr)
importFrom(rlang,inject)
importFrom(rlang,is_false)
importFrom(rlang,is_missing)
importFrom(rlang,is_na)
importFrom(rlang,is_quosure)
importFrom(rlang,maybe_missing)
importFrom(rlang,missing_arg)
importFrom(rlang,new_function)
importFrom(rlang,new_quosure)
importFrom(rlang,pairlist2)
importFrom(rlang,quo)
importFrom(rlang,zap_srcref)
# Generated by roxygen2: do not edit by hand

S3method("$",rlang_ctxt_pronoun)
S3method("$",rlang_data_pronoun)
S3method("$",rlang_fake_data_pronoun)
S3method("$<-",quosures)
S3method("$<-",rlang_ctxt_pronoun)
S3method("$<-",rlang_data_pronoun)
S3method("[",quosure)
S3method("[",quosures)
S3method("[",rlang_data_pronoun)
S3method("[",rlang_envs)
S3method("[",stack)
S3method("[<-",quosures)
S3method("[[",quosure)
S3method("[[",rlang_ctxt_pronoun)
S3method("[[",rlang_data_pronoun)
S3method("[[",rlang_fake_data_pronoun)
S3method("[[<-",quosures)
S3method("[[<-",rlang_ctxt_pronoun)
S3method("[[<-",rlang_data_pronoun)
S3method(Math,quosure)
S3method(Ops,quosure)
S3method(Summary,quosure)
S3method(as.character,quosure)
S3method(as.list,quosures)
S3method(c,quosures)
S3method(c,rlang_envs)
S3method(cnd_body,default)
S3method(cnd_footer,default)
S3method(cnd_header,default)
S3method(conditionMessage,rlang_error)
S3method(format,rlang_error)
S3method(format,rlang_trace)
S3method(length,rlang_ctxt_pronoun)
S3method(length,rlang_data_pronoun)
S3method(length,rlang_fake_data_pronoun)
S3method(mean,quosure)
S3method(median,quosure)
S3method(names,rlang_ctxt_pronoun)
S3method(names,rlang_data_pronoun)
S3method(names,rlang_fake_data_pronoun)
S3method(print,frame)
S3method(print,quosure)
S3method(print,quosures)
S3method(print,rlang_box_done)
S3method(print,rlang_box_splice)
S3method(print,rlang_data_pronoun)
S3method(print,rlang_envs)
S3method(print,rlang_error)
S3method(print,rlang_fake_data_pronoun)
S3method(print,rlang_lambda_function)
S3method(print,rlang_trace)
S3method(print,rlang_zap)
S3method(quantile,quosure)
S3method(rlang_type_sum,Date)
S3method(rlang_type_sum,POSIXct)
S3method(rlang_type_sum,data.frame)
S3method(rlang_type_sum,default)
S3method(rlang_type_sum,difftime)
S3method(rlang_type_sum,factor)
S3method(rlang_type_sum,ordered)
S3method(str,quosure)
S3method(str,rlang_data_pronoun)
S3method(str,rlang_envs)
S3method(summary,rlang_error)
S3method(summary,rlang_trace)
export("!!!")
export("!!")
export("%<~%")
export("%@%")
export("%@%<-")
export("%|%")
export("%||%")
export(":=")
export("f_env<-")
export("f_lhs<-")
export("f_rhs<-")
export("fn_body<-")
export("fn_env<-")
export("fn_fmls<-")
export("fn_fmls_names<-")
export(.data)
export(.env)
export(UQ)
export(UQS)
export(abort)
export(are_na)
export(arg_match)
export(arg_match0)
export(as_box)
export(as_box_if)
export(as_bytes)
export(as_character)
export(as_closure)
export(as_complex)
export(as_data_mask)
export(as_data_pronoun)
export(as_double)
export(as_env)
export(as_environment)
export(as_function)
export(as_integer)
export(as_label)
export(as_list)
export(as_logical)
export(as_name)
export(as_overscope)
export(as_pairlist)
export(as_quosure)
export(as_quosures)
export(as_string)
export(as_utf8_character)
export(base_env)
export(bytes)
export(bytes_along)
export(bytes_len)
export(call2)
export(call_args)
export(call_args_names)
export(call_depth)
export(call_fn)
export(call_frame)
export(call_inspect)
export(call_modify)
export(call_name)
export(call_ns)
export(call_parse_type)
export(call_stack)
export(call_standardise)
export(caller_env)
export(caller_fn)
export(caller_frame)
export(calling)
export(catch_cnd)
export(check_installed)
export(child_env)
export(chr)
export(chr_along)
export(chr_len)
export(chr_unserialise_unicode)
export(cnd)
export(cnd_body)
export(cnd_entrace)
export(cnd_footer)
export(cnd_header)
export(cnd_message)
export(cnd_muffle)
export(cnd_signal)
export(cnd_type)
export(coerce_class)
export(coerce_type)
export(cpl)
export(cpl_along)
export(cpl_len)
export(ctxt_depth)
export(ctxt_frame)
export(ctxt_stack)
export(current_env)
export(current_fn)
export(current_frame)
export(dbl)
export(dbl_along)
export(dbl_len)
export(done)
export(dots_definitions)
export(dots_list)
export(dots_n)
export(dots_splice)
export(dots_values)
export(duplicate)
export(empty_env)
export(enexpr)
export(enexprs)
export(enquo)
export(enquo0)
export(enquos)
export(enquos0)
export(ensym)
export(ensyms)
export(entrace)
export(env)
export(env_bind)
export(env_bind_active)
export(env_bind_exprs)
export(env_bind_fns)
export(env_bind_lazy)
export(env_binding_are_active)
export(env_binding_are_lazy)
export(env_binding_are_locked)
export(env_binding_lock)
export(env_binding_unlock)
export(env_browse)
export(env_bury)
export(env_clone)
export(env_depth)
export(env_get)
export(env_get_list)
export(env_has)
export(env_inherits)
export(env_is_browsed)
export(env_is_locked)
export(env_label)
export(env_length)
export(env_lock)
export(env_name)
export(env_names)
export(env_parent)
export(env_parents)
export(env_poke)
export(env_poke_parent)
export(env_print)
export(env_tail)
export(env_unbind)
export(env_unlock)
export(error_cnd)
export(eval_bare)
export(eval_tidy)
export(exec)
export(exiting)
export(expr)
export(expr_deparse)
export(expr_interp)
export(expr_label)
export(expr_name)
export(expr_print)
export(expr_text)
export(exprs)
export(exprs_auto_name)
export(f_env)
export(f_label)
export(f_lhs)
export(f_name)
export(f_rhs)
export(f_text)
export(flatten)
export(flatten_chr)
export(flatten_cpl)
export(flatten_dbl)
export(flatten_if)
export(flatten_int)
export(flatten_lgl)
export(flatten_raw)
export(fn_body)
export(fn_env)
export(fn_fmls)
export(fn_fmls_names)
export(fn_fmls_syms)
export(format_error_bullets)
export(frame_position)
export(friendly_type)
export(get_env)
export(get_expr)
export(global_env)
export(global_frame)
export(has_length)
export(has_name)
export(hash)
export(have_name)
export(inform)
export(inherits_all)
export(inherits_any)
export(inherits_only)
export(inject)
export(int)
export(int_along)
export(int_len)
export(interrupt)
export(invoke)
export(is_atomic)
export(is_attached)
export(is_bare_atomic)
export(is_bare_bytes)
export(is_bare_character)
export(is_bare_double)
export(is_bare_env)
export(is_bare_environment)
export(is_bare_formula)
export(is_bare_integer)
export(is_bare_integerish)
export(is_bare_list)
export(is_bare_logical)
export(is_bare_numeric)
export(is_bare_raw)
export(is_bare_string)
export(is_bare_vector)
export(is_binary_lang)
export(is_bool)
export(is_box)
export(is_bytes)
export(is_call)
export(is_call_stack)
export(is_callable)
export(is_character)
export(is_chr_na)
export(is_closure)
export(is_condition)
export(is_copyable)
export(is_cpl_na)
export(is_dbl_na)
export(is_definition)
export(is_dictionaryish)
export(is_done_box)
export(is_double)
export(is_empty)
export(is_env)
export(is_environment)
export(is_eval_stack)
export(is_expr)
export(is_expression)
export(is_false)
export(is_formula)
export(is_formulaish)
export(is_frame)
export(is_function)
export(is_installed)
export(is_int_na)
export(is_integer)
export(is_integerish)
export(is_interactive)
export(is_lambda)
export(is_lang)
export(is_lgl_na)
export(is_list)
export(is_logical)
export(is_missing)
export(is_na)
export(is_named)
export(is_namespace)
export(is_node)
export(is_node_list)
export(is_null)
export(is_pairlist)
export(is_primitive)
export(is_primitive_eager)
export(is_primitive_lazy)
export(is_quosure)
export(is_quosures)
export(is_raw)
export(is_reference)
export(is_scalar_atomic)
export(is_scalar_bytes)
export(is_scalar_character)
export(is_scalar_double)
export(is_scalar_integer)
export(is_scalar_integerish)
export(is_scalar_list)
export(is_scalar_logical)
export(is_scalar_raw)
export(is_scalar_vector)
export(is_scoped)
export(is_spliced)
export(is_spliced_bare)
export(is_stack)
export(is_string)
export(is_symbol)
export(is_symbolic)
export(is_syntactic_literal)
export(is_true)
export(is_unary_lang)
export(is_vector)
export(is_weakref)
export(is_zap)
export(lang)
export(lang_args)
export(lang_args_names)
export(lang_fn)
export(lang_head)
export(lang_modify)
export(lang_name)
export(lang_standardise)
export(lang_tail)
export(last_error)
export(last_trace)
export(lgl)
export(lgl_along)
export(lgl_len)
export(list2)
export(list_along)
export(list_len)
export(ll)
export(local_bindings)
export(local_interactive)
export(local_options)
export(locally)
export(maybe_missing)
export(message_cnd)
export(missing_arg)
export(modify)
export(mut_attrs)
export(mut_node_caar)
export(mut_node_cadr)
export(mut_node_car)
export(mut_node_cdar)
export(mut_node_cddr)
export(mut_node_cdr)
export(mut_node_tag)
export(na_chr)
export(na_cpl)
export(na_dbl)
export(na_int)
export(na_lgl)
export(names2)
export(new_box)
export(new_call)
export(new_character)
export(new_character_along)
export(new_complex)
export(new_complex_along)
export(new_data_mask)
export(new_definition)
export(new_double)
export(new_double_along)
export(new_environment)
export(new_formula)
export(new_function)
export(new_integer)
export(new_integer_along)
export(new_language)
export(new_list)
export(new_list_along)
export(new_logical)
export(new_logical_along)
export(new_node)
export(new_overscope)
export(new_quosure)
export(new_quosures)
export(new_raw)
export(new_raw_along)
export(new_weakref)
export(node)
export(node_caar)
export(node_cadr)
export(node_car)
export(node_cdar)
export(node_cddr)
export(node_cdr)
export(node_poke_caar)
export(node_poke_cadr)
export(node_poke_car)
export(node_poke_cdar)
export(node_poke_cddr)
export(node_poke_cdr)
export(node_poke_tag)
export(node_tag)
export(ns_env)
export(ns_env_name)
export(ns_imports_env)
export(overscope_clean)
export(overscope_eval_next)
export(pairlist2)
export(parse_expr)
export(parse_exprs)
export(parse_quo)
export(parse_quos)
export(parse_quosure)
export(parse_quosures)
export(peek_option)
export(peek_options)
export(pkg_env)
export(pkg_env_name)
export(prepend)
export(prim_name)
export(push_options)
export(qq_show)
export(quo)
export(quo_expr)
export(quo_get_env)
export(quo_get_expr)
export(quo_is_call)
export(quo_is_lang)
export(quo_is_missing)
export(quo_is_null)
export(quo_is_symbol)
export(quo_is_symbolic)
export(quo_label)
export(quo_name)
export(quo_set_env)
export(quo_set_expr)
export(quo_squash)
export(quo_text)
export(quos)
export(quos_auto_name)
export(raw_along)
export(raw_deparse_str)
export(raw_len)
export(rep_along)
export(rep_named)
export(restarting)
export(return_from)
export(return_to)
export(rst_abort)
export(rst_exists)
export(rst_jump)
export(rst_list)
export(rst_maybe_jump)
export(scoped_bindings)
export(scoped_env)
export(scoped_envs)
export(scoped_interactive)
export(scoped_names)
export(scoped_options)
export(search_env)
export(search_envs)
export(seq2)
export(seq2_along)
export(set_attrs)
export(set_env)
export(set_expr)
export(set_names)
export(signal)
export(splice)
export(squash)
export(squash_chr)
export(squash_cpl)
export(squash_dbl)
export(squash_if)
export(squash_int)
export(squash_lgl)
export(squash_raw)
export(stack_trim)
export(string)
export(switch_class)
export(switch_type)
export(sym)
export(syms)
export(trace_back)
export(trace_length)
export(type_of)
export(unbox)
export(vec_poke_n)
export(vec_poke_range)
export(warn)
export(warning_cnd)
export(with_abort)
export(with_bindings)
export(with_env)
export(with_handlers)
export(with_interactive)
export(with_options)
export(with_restarts)
export(wref_key)
export(wref_value)
export(zap)
export(zap_srcref)
importFrom(stats,median)
importFrom(stats,quantile)
importFrom(utils,adist)
importFrom(utils,str)
useDynLib(rlang, .registration = TRUE)
useDynLib(sp,
	bboxCalcR_c,
	pointsInBox,
	Polygon_c,
	Polygon_validate_c,
	Polygons_c,
	R_point_in_polygon_sp,
	sp_zerodist,
	sp_duplicates,
	SpatialPolygons_c,
	SpatialPolygons_getIDs_c,
	SpatialPolygons_plotOrder_c,
	SpatialPolygons_validate_c,
	tList
)

importFrom(graphics, plot, hist, polygon, par, polypath, lines, strheight, 
	text, contour, axTicks, axis, rasterImage, image, box, plot.new, 
	plot.window, rect, segments, points, locator, identify, title,
	layout, lcm)
importFrom(stats, aggregate, na.omit, aggregate.data.frame, complete.cases, 
	quantile, as.formula, dist, runif, model.frame, na.fail)
import(utils)
importFrom(grid, grid.polygon, grid.path, grid.rect, polygonGrob, gpar,
	grid.layout, unit, frameGrob, placeGrob, rectGrob, grid.locator,
	grid.raster)
importFrom(grDevices, rgb, heat.colors)
import(methods)
import(lattice)

export(
	CRS,
	identicalCRS,
	# print.CRS, -> S3Method()

	# bbox,
	getGridIndex,
	points2grid,
	bpy.colors,
	bubble,
	mapasp,
	point.in.polygon,
	spmap.to.lev,
	zerodist,
	zerodist2,
	remove.duplicates,
	degAxis,
	"%over%",

	get_ll_warn,
	set_ll_warn,
	get_ll_TOL,
	set_ll_TOL,
	get_ReplCRS_warn,
	set_ReplCRS_warn,
	get_Polypath,
	set_Polypath,
	get_PolypathRule, 
	set_PolypathRule,
	set_col_regions,
	get_col_regions,

	coordinatevalues,

	dimensions,

	Spatial,
 
	SpatialPoints,
	SpatialPointsDataFrame,

	SpatialMultiPoints,
	SpatialMultiPointsDataFrame,

	Line,
	Lines,
	SpatialLines,
	SpatialLinesDataFrame,
	as.SpatialLines.SLDF,
	LineLength,
	LinesLength,
	SpatialLinesLengths,

	layout.scale.bar,
	layout.north.arrow,
	sp.theme,
	mapLegendGrob,
	spplot.key,
	panel.ggmap,
	panel.gridplot,
	panel.polygonsplot,
	panel.pointsplot,
	panel.RgoogleMaps,
	sp.polygons,
	sp.lines,
	sp.text,
	sp.points,
	sp.grid,
	SpatialPolygonsRescale,
	spplot.locator,
	sp.panel.layout,
	degreeLabelsEW,
	degreeLabelsNS,
	longlat.scales,
	bbexpand,
	compassRose,

	as.image.SpatialGridDataFrame,
	image2Grid,
	imageScale,
	
	gridparameters,
	SpatialPixels,
	SpatialPixelsDataFrame,
	SpatialGrid,
	SpatialGridDataFrame,
	GridTopology,
	getGridTopology,
	areaSpatialGrid,
	gridlines,
	gridat,
	gridIndex2nb,

	getSLlinesSlot,
	getLinesLinesSlot, 
	getLinesIDSlot,
	getSLLinesIDSlots,

	getSpatialLinesMidPoints,

	getPolygonCoordsSlot,
	getPolygonLabptSlot,
	getPolygonAreaSlot,
	getPolygonHoleSlot,
	getPolygonsPolygonsSlot,
	getPolygonsplotOrderSlot,
	getPolygonsLabptSlot,
	getPolygonsIDSlot,
	getSpPpolygonsSlot,
	getSpPplotOrderSlot,
	getSpPPolygonsLabptSlots,
	getSpPPolygonsIDSlots,
	getSpPnParts,
	getSpPnHoles,
	getSpatialPolygonsLabelPoints,

	select.spatial,

	as.SpatialPolygons.PolygonsList,
  # as.SpatialPolygonsDataFrame.SpatialPolygons, -> use coerce()

  # DMS:
	dd2dms, 
	print.DMS, 
	char2dms, 
	as.character.DMS,
	as.double.DMS, 
	as.numeric.DMS,

	# is coerce, but needed to add proj4string:
	as.SpatialPolygons.GridTopology, 

	# as.SpatialPolygons.SpatialPixels, -> is a coerce(), but plotKML uses it
	IDvaluesGridTopology, 
	IDvaluesSpatialPixels, 
	HexPoints2SpatialPolygons,

	flipHorizontal,
	flipVertical,

	loadMeuse,

	makegrid,

	overDF_for_rgeos, # for rgeos only!

	read.asciigrid, 

	Polygon,
	Polygons,

	cbind.Spatial,

	rbind.SpatialPoints,
	rbind.SpatialPointsDataFrame, 
	rbind.SpatialMultiPoints,
	rbind.SpatialMultiPointsDataFrame, 
	rbind.SpatialPixels,
	rbind.SpatialPixelsDataFrame,
	rbind.SpatialPolygons,
	rbind.SpatialPolygonsDataFrame,
	rbind.SpatialLines,
	rbind.SpatialLinesDataFrame,

	# sample.Spatial, -> coerce()...
	# sample.Line,
	# sample.Polygon,
	# sample.Polygons,
	# sample.Sgrid,

	# ShowSpatialPointsDataFrame -> coerce()...

	SpatialPolygons,
	SpatialPolygonsDataFrame,

	spDistsN1,
	spDists,

	write.asciigrid
)

exportClasses(
	DMS,
	CRS, 
	GridTopology,
	Line, 
	Lines,
	Polygon, 
	Polygons, 
	Spatial, 
	SpatialGrid, 
	SpatialGridDataFrame,
	SpatialLines, 
	SpatialLinesDataFrame,
	SpatialPixels, 
	SpatialPixelsDataFrame,
	SpatialPoints, 
 	SpatialPointsDataFrame, 
	SpatialMultiPoints, 
 	SpatialMultiPointsDataFrame, 
	SpatialPolygons, 
	SpatialPolygonsDataFrame,
	# spatstat classes:
	ppp, im, owin, psp
)

exportMethods(
	"[", "[[", "$", "$<-", 
	addAttrToGeom,
	bbox, 
	coerce, 
	coordinates, 
	"coordinates<-",
	coordnames, 
	"coordnames<-", 
	dimensions, 
	disaggregate,
	fullgrid,
	"fullgrid<-",
	geometry, 
	"geometry<-", 
	gridded,
	"gridded<-",
	is.projected,
	merge,
	over,
	# overlay,
	plot,
	polygons, 
	"polygons<-",
	proj4string,
	"proj4string<-",
        wkt,
	recenter,
	show, 
	spChFIDs,
	"spChFIDs<-",
	split,
	sppanel,
	spplot,
	spsample,
	summary,
	surfaceArea, 
	spTransform,
        rebuild_CRS
)

S3method(as.array, SpatialGridDataFrame)

S3method(as.character, DMS)

S3method(as.data.frame, SpatialPoints)
S3method(as.data.frame, SpatialMultiPoints)
S3method(as.data.frame, SpatialPixels)
S3method(as.data.frame, SpatialGrid)
S3method(as.data.frame, SpatialPointsDataFrame)
S3method(as.data.frame, SpatialMultiPointsDataFrame)
S3method(as.data.frame, SpatialPixelsDataFrame)
S3method(as.data.frame, SpatialGridDataFrame)
S3method(as.data.frame, SpatialLinesDataFrame)
S3method(as.data.frame, SpatialPolygonsDataFrame)
S3method(as.data.frame, GridTopology)

S3method(as.double, DMS)
S3method(as.numeric, DMS)

S3method(as.matrix, SpatialGridDataFrame)
S3method(as.matrix, SpatialPixelsDataFrame)

S3method(aggregate, Spatial)

S3method(cbind, Spatial)
S3method(cbind, SpatialGridDataFrame)

S3method(contour, SpatialPixelsDataFrame)
S3method(contour, SpatialGridDataFrame)

S3method(dim, SpatialPointsDataFrame)
S3method(dim, SpatialMultiPointsDataFrame)
S3method(dim, SpatialLinesDataFrame)
S3method(dim, SpatialPolygonsDataFrame)
S3method(dim, SpatialPixelsDataFrame)
S3method(dim, SpatialGridDataFrame)

S3method(head, Spatial)

S3method(image, SpatialPixelsDataFrame)
S3method(image, SpatialPixels)
S3method(image, SpatialGridDataFrame)

S3method(is.na, CRS)

S3method(labels, SpatialLines)

S3method(length, SpatialGrid)
S3method(length, SpatialLines)
S3method(length, SpatialPixels)
S3method(length, SpatialPoints)
S3method(length, SpatialMultiPoints)
S3method(length, SpatialPolygons)
S3method(length, SpatialGridDataFrame)
S3method(length, SpatialLinesDataFrame)
S3method(length, SpatialPixelsDataFrame)
S3method(length, SpatialPointsDataFrame)
S3method(length, SpatialMultiPointsDataFrame)
S3method(length, SpatialPolygonsDataFrame)

S3method(lines, Line)
S3method(lines, Lines)
S3method(lines, SpatialLines)
S3method(lines, SpatialLinesDataFrame)

S3method(names, SpatialPointsDataFrame)
S3method(names, SpatialMultiPointsDataFrame)
S3method(names, SpatialPixelsDataFrame)
S3method(names, SpatialGridDataFrame)
S3method(names, SpatialLinesDataFrame)
S3method(names, SpatialPolygonsDataFrame)
S3method(names, SpatialLines)
S3method(names, SpatialPolygons)
S3method(names, SpatialMultiPoints)

S3method("names<-", SpatialPointsDataFrame)
S3method("names<-", SpatialPolygonsDataFrame)
S3method("names<-", SpatialLinesDataFrame)
S3method("names<-", SpatialPixelsDataFrame)
S3method("names<-", SpatialGridDataFrame)

S3method(row.names, SpatialPoints)
S3method(row.names, SpatialMultiPoints)
S3method(row.names, SpatialLines)
S3method(row.names, SpatialPolygons)
S3method(row.names, SpatialPixels)
S3method(row.names, SpatialGrid)
S3method(row.names, SpatialPointsDataFrame)
S3method(row.names, SpatialLinesDataFrame)
S3method(row.names, SpatialPolygonsDataFrame)
S3method(row.names, SpatialGridDataFrame)

S3method("row.names<-", SpatialPoints)
S3method("row.names<-", SpatialMultiPoints)
S3method("row.names<-", SpatialPointsDataFrame)
S3method("row.names<-", SpatialPolygons)
S3method("row.names<-", SpatialPolygonsDataFrame)
S3method("row.names<-", SpatialLines)
S3method("row.names<-", SpatialLinesDataFrame)

S3method(points, SpatialPoints)
S3method(points, SpatialPointsDataFrame)
S3method(points, SpatialMultiPoints)
S3method(points, SpatialMultiPointsDataFrame)

S3method(print, CRS)
S3method(print, DMS)
S3method(print, GridTopology)
S3method(print, SpatialPoints)
S3method(print, SpatialMultiPoints)
S3method(print, SpatialPixels)
S3method(print, SpatialLines)
S3method(print, SpatialPointsDataFrame)
S3method(print, SpatialMultiPointsDataFrame)
S3method(print, SpatialPixelsDataFrame)
S3method(print, SpatialLinesDataFrame)
S3method(print, summary.Spatial)
S3method(print, summary.GridTopology)

S3method(rbind, SpatialLines)
S3method(rbind, SpatialLinesDataFrame)
S3method(rbind, SpatialMultiPoints)
S3method(rbind, SpatialMultiPointsDataFrame)
S3method(rbind, SpatialPixels)
S3method(rbind, SpatialPixelsDataFrame)
S3method(rbind, SpatialPoints)
S3method(rbind, SpatialPointsDataFrame)
S3method(rbind, SpatialPolygons)
S3method(rbind, SpatialPolygonsDataFrame)

S3method(split, SpatialPoints)

S3method(stack, SpatialPointsDataFrame)
S3method(stack, SpatialPixelsDataFrame)
S3method(stack, SpatialGridDataFrame)

S3method(subset, Spatial)

S3method(tail, Spatial)

S3method(text, SpatialPointsDataFrame)
useDynLib(Rcpp, .registration = TRUE)

import(methods)
importFrom(utils, capture.output, assignInNamespace, .DollarNames, prompt,
           packageDescription, package.skeleton, glob2rx)

exportClasses(Module, "C++Field",
              "C++OverloadedMethods",
              "C++Constructor",
              "C++Class", "C++Object", "C++Function")

S3method(.DollarNames, "C++Object")
S3method(.DollarNames, "Module")
exportMethods(prompt, show, .DollarNames, initialize, "formals<-")

export(Module,
       Rcpp.package.skeleton,
       populate,
       loadRcppModules,  # deprecated since Rcpp 0.12.5 released May 2016
       setRcppClass,
       loadRcppClass,
       loadModule,
       cppFunction,
       exposeClass,
       evalCpp,
       sourceCpp,
       compileAttributes,
       registerPlugin,
       RcppLdFlags,     # deprecated since Rcpp 0.12.19 released Sep 2018
       LdFlags,         # deprecated since Rcpp 0.12.19 released Sep 2018
       demangle,
       sizeof,
       cpp_object_initializer,
       cpp_object_dummy,
       Rcpp.plugin.maker,
       getRcppVersion
       )
S3method(print, bytes)
S3method(format, Rcpp_stack_trace)
S3method(str, Rcpp_stack_trace)
S3method(print, Rcpp_stack_trace)
exportClass(RcppClass)
# Generated by roxygen2: do not edit by hand

S3method(as.double,float32)
S3method(as.integer,float32)
S3method(as.matrix,float32)
S3method(as.vector,float32)
S3method(cbind,float32)
S3method(rbind,float32)
S3method(rep,float32)
S3method(str,float32)
export(as.float)
export(dbl)
export(fl)
export(float)
export(float32)
export(flrand)
export(flrnorm)
export(flrunif)
export(int)
export(is.float)
exportClasses(float32)
exportMethods("%*%")
exportMethods("*")
exportMethods("+")
exportMethods("-")
exportMethods("/")
exportMethods("<")
exportMethods("<=")
exportMethods("==")
exportMethods(">")
exportMethods(">=")
exportMethods("[")
exportMethods("[<-")
exportMethods("^")
exportMethods("colnames<-")
exportMethods("dim<-")
exportMethods("dimnames<-")
exportMethods("names<-")
exportMethods("rownames<-")
exportMethods(La.svd)
exportMethods(NCOL)
exportMethods(NROW)
exportMethods(abs)
exportMethods(acos)
exportMethods(acosh)
exportMethods(as.numeric)
exportMethods(asin)
exportMethods(asinh)
exportMethods(atan)
exportMethods(atanh)
exportMethods(backsolve)
exportMethods(c)
exportMethods(ceiling)
exportMethods(chol)
exportMethods(chol2inv)
exportMethods(colMeans)
exportMethods(colSums)
exportMethods(colnames)
exportMethods(cos)
exportMethods(cosh)
exportMethods(crossprod)
exportMethods(diag)
exportMethods(dim)
exportMethods(dimnames)
exportMethods(eigen)
exportMethods(exp)
exportMethods(expm1)
exportMethods(floor)
exportMethods(forwardsolve)
exportMethods(gamma)
exportMethods(is.finite)
exportMethods(is.infinite)
exportMethods(is.na)
exportMethods(is.nan)
exportMethods(isSymmetric)
exportMethods(length)
exportMethods(lgamma)
exportMethods(log)
exportMethods(log10)
exportMethods(log2)
exportMethods(max)
exportMethods(min)
exportMethods(na.exclude)
exportMethods(na.omit)
exportMethods(names)
exportMethods(ncol)
exportMethods(norm)
exportMethods(nrow)
exportMethods(print)
exportMethods(qr)
exportMethods(qr.Q)
exportMethods(qr.R)
exportMethods(qr.qty)
exportMethods(qr.qy)
exportMethods(rcond)
exportMethods(round)
exportMethods(rowMeans)
exportMethods(rowSums)
exportMethods(rownames)
exportMethods(scale)
exportMethods(show)
exportMethods(sign)
exportMethods(sin)
exportMethods(sinh)
exportMethods(solve)
exportMethods(sqrt)
exportMethods(storage.mode)
exportMethods(sum)
exportMethods(svd)
exportMethods(sweep)
exportMethods(t)
exportMethods(tan)
exportMethods(tanh)
exportMethods(tcrossprod)
exportMethods(trunc)
exportMethods(typeof)
exportMethods(which.max)
exportMethods(which.min)
import(methods)
importFrom(utils,capture.output)
importFrom(utils,str)
useDynLib(float,R_abs_spm)
useDynLib(float,R_acos_spm)
useDynLib(float,R_acosh_spm)
useDynLib(float,R_add_spm)
useDynLib(float,R_anyNA_spm)
useDynLib(float,R_asin_spm)
useDynLib(float,R_asinh_spm)
useDynLib(float,R_atan_spm)
useDynLib(float,R_atanh_spm)
useDynLib(float,R_backsolve_spm)
useDynLib(float,R_ceiling_spm)
useDynLib(float,R_chol2inv_spm)
useDynLib(float,R_chol_spm)
useDynLib(float,R_colMeans_spm)
useDynLib(float,R_colSums_spm)
useDynLib(float,R_cos_spm)
useDynLib(float,R_cosh_spm)
useDynLib(float,R_crossprod_spm)
useDynLib(float,R_crossprod_spmspm)
useDynLib(float,R_div_spm)
useDynLib(float,R_eq_spm)
useDynLib(float,R_exp_spm)
useDynLib(float,R_expm1_spm)
useDynLib(float,R_floor_spm)
useDynLib(float,R_flrand_spm)
useDynLib(float,R_flrnorm_spm)
useDynLib(float,R_flrunif_spm)
useDynLib(float,R_gamma_spm)
useDynLib(float,R_ge_spm)
useDynLib(float,R_gt_spm)
useDynLib(float,R_init_NAf)
useDynLib(float,R_init_NaNf)
useDynLib(float,R_isSymmetric_spm)
useDynLib(float,R_isfinite_spm)
useDynLib(float,R_isinfinite_spm)
useDynLib(float,R_isna_spm)
useDynLib(float,R_isnan_spm)
useDynLib(float,R_le_spm)
useDynLib(float,R_lgamma_spm)
useDynLib(float,R_log10_spm)
useDynLib(float,R_log2_spm)
useDynLib(float,R_log_spm)
useDynLib(float,R_lt_spm)
useDynLib(float,R_machine_spm)
useDynLib(float,R_mat2spm)
useDynLib(float,R_matmult_spm)
useDynLib(float,R_max_spm)
useDynLib(float,R_min_spm)
useDynLib(float,R_mul_spm)
useDynLib(float,R_naomit_spm)
useDynLib(float,R_norm_spm)
useDynLib(float,R_pow_spm)
useDynLib(float,R_qrQ_spm)
useDynLib(float,R_qrR_spm)
useDynLib(float,R_qr_spm)
useDynLib(float,R_qrqy_spm)
useDynLib(float,R_rcond_spm)
useDynLib(float,R_round_spm)
useDynLib(float,R_rowMeans_spm)
useDynLib(float,R_rowSums_spm)
useDynLib(float,R_scale_spm)
useDynLib(float,R_sign_spm)
useDynLib(float,R_sin_spm)
useDynLib(float,R_sinh_spm)
useDynLib(float,R_solve_spm)
useDynLib(float,R_solve_spmspm)
useDynLib(float,R_spm2int)
useDynLib(float,R_spm2mat)
useDynLib(float,R_sqrt_spm)
useDynLib(float,R_sub_spm)
useDynLib(float,R_sum_spm)
useDynLib(float,R_svd_spm)
useDynLib(float,R_sweep_spm)
useDynLib(float,R_symeig_spm)
useDynLib(float,R_tan_spm)
useDynLib(float,R_tanh_spm)
useDynLib(float,R_tcrossprod_spm)
useDynLib(float,R_tcrossprod_spmspm)
useDynLib(float,R_trunc_spm)
useDynLib(float,R_whichmax_spm)
useDynLib(float,R_whichmin_spm)
useDynLib(float,R_xpose_spm)
# Generated by roxygen2: do not edit by hand

export(Launch)
export(addMask)
export(detectShifts)
export(drawPolygon)
export(extractCCC)
export(extractCCCTimeSeries)
export(getCL)
export(getCLArray)
export(gettmpdir)
export(parsePhenocamFilenames)
export(parseROI)
export(plotCLArray)
export(plotJPEG)
export(rasterizeROI)
export(writeROI)
import(RCurl)
import(colourpicker, except = runExample)
import(data.table, except = c(month, hour, quarter, week, year, wday, second, minute, mday, yday, isoweek, shift))
import(jpeg)
import(lubridate, except = origin)
import(methods)
import(moments)
import(raster, except = c(intersect, union, quantile))
import(rgdal)
import(rjson)
import(shiny)
import(shinyjs, except = c(runExample, updateColourInput, reset, colourPicker, colourInput, show, click, removeClass))

import(sp)
import(stringr)
import(tiff)
importFrom(data.table,as.data.table)
importFrom(data.table,data.table)
importFrom(grDevices,rgb2hsv)
importFrom(graphics,abline)
importFrom(graphics,axis)
importFrom(graphics,locator)
importFrom(graphics,mtext)
importFrom(graphics,par)
importFrom(graphics,polygon)
importFrom(graphics,rasterImage)
importFrom(graphics,rect)
importFrom(lubridate,date)
importFrom(lubridate,yday)
importFrom(stats,approx)
importFrom(stats,cor)
importFrom(stats,na.omit)
importFrom(stats,quantile)
importFrom(stats,sd)
importFrom(stats,smooth)
importFrom(utils,data)
importFrom(utils,download.file)
importFrom(utils,read.csv)
importFrom(utils,read.table)
importFrom(utils,setTxtProgressBar)
importFrom(utils,txtProgressBar)
importFrom(utils,unzip)
importFrom(utils,write.table)
importFrom(utils,zip)
# Generated by roxygen2: do not edit by hand

export(CNVScopeserver)
export(GRanges_to_underscored_pos)
export(averageMatrixEdges)
export(calcCNVKernelProbDist)
export(calcVecLMs)
export(createChromosomalMatrixSet)
export(downsample_genomic_matrix)
export(extractNegLogPval)
export(formSampleMatrixFromRawGDCData)
export(freadGDCfile)
export(getAnnotationMatrix)
export(getAsymmetricBlockIndices)
export(getBlockAverageMatrixFromBreakpoints)
export(getGlobalRescalingStats)
export(getInterchromosomalInteractivePlot)
export(importBreakpointBed)
export(mathead)
export(postProcessLinRegMatrix)
export(rebinGenomicInteractions)
export(runCNVScopeLocal)
export(runCNVScopeShiny)
export(signedRescale)
export(underscored_pos_to_GRanges)
export(writeAsymmetricMeltedChromosomalMatrixToDisk)
export(writeMeltedChromosomalMatrixToDisk)
import(GenomicInteractions)
import(RCurl, except = reset)
import(data.table, except = c(melt, dcast))
import(doParallel)
import(foreach)
import(ggplot2)
import(magrittr)
import(parallel)
import(reshape2)
import(shiny, except = c(runExample,renderDataTable))
import(stats)
importFrom(GenomicInteractions,anchorOne)
importFrom(GenomicInteractions,anchorTwo)
importFrom(Matrix,bandSparse)
importFrom(Matrix,colMeans)
importFrom(Matrix,rowMeans)
importFrom(Matrix,sparseMatrix)
importFrom(OpenImageR,down_sample_image)
importFrom(biomaRt,getBM)
importFrom(biomaRt,useMart)
importFrom(data.table,fread)
importFrom(dplyr,bind_cols)
importFrom(dplyr,everything)
importFrom(dplyr,mutate)
importFrom(dplyr,select)
importFrom(foreach,foreach)
importFrom(ggplot2,scale_fill_gradient2)
importFrom(jointseg,jointSeg)
importFrom(matrixStats,colSds)
importFrom(plyr,ddply)
importFrom(reshape2,colsplit)
importFrom(rtracklayer,import.bed)
importFrom(stringr,str_detect)
importFrom(tidyr,drop_na)
importFrom(tidyr,unite)
# Generated by roxygen2: do not edit by hand

export(gforce.FDR_control)
export(gforce.FORCE)
export(gforce.FORCE_adapt)
export(gforce.Gamma)
export(gforce.PECOK)
export(gforce.PECOK_adapt)
export(gforce.certify)
export(gforce.certify_adapt)
export(gforce.clust2mat)
export(gforce.confint2test)
export(gforce.defaults)
export(gforce.generator)
export(gforce.glatent_confints)
export(gforce.glatent_confints.cv_defaults)
export(gforce.hclust)
export(gforce.hclust.agg2clust)
export(gforce.hclust.agglomerate)
export(gforce.kmeans)
export(gforce.kmeans_SDP_matrix)
export(gforce.metrics)
export(gforce.scio)
useDynLib(GFORCE,FORCE_R)
useDynLib(GFORCE,FORCE_adapt_R)
useDynLib(GFORCE,gamma_alternative_estimator_R)
useDynLib(GFORCE,gamma_alternative_estimator_par_R)
useDynLib(GFORCE,hclust_R)
useDynLib(GFORCE,hclust_agglomerate_R)
useDynLib(GFORCE,kmeans_dual_solution_primal_min_R)
useDynLib(GFORCE,kmeans_dual_solution_primal_min_nok_R)
useDynLib(GFORCE,kmeans_pp_R)
useDynLib(GFORCE,scio_column_R)
useDynLib(GFORCE,test_clust_to_opt_val)
useDynLib(GFORCE,test_daps)
useDynLib(GFORCE,test_dcsum)
useDynLib(GFORCE,test_dsmtd)
useDynLib(GFORCE,test_dsumv)
useDynLib(GFORCE,test_dtrace)
useDynLib(GFORCE,test_dvexp)
useDynLib(GFORCE,test_dxpyez)
useDynLib(GFORCE,test_project_C_perpendicular)
useDynLib(GFORCE,test_project_C_perpendicular_nok)
useDynLib(GFORCE,test_project_E)
useDynLib(GFORCE,test_smoothed_gradient)
useDynLib(GFORCE,test_smoothed_gradient_S_base)
useDynLib(GFORCE,test_smoothed_gradient_X_base)
useDynLib(GFORCE,test_smoothed_objective)
useDynLib(GFORCE,v_measure)
useDynLib(GFORCE,v_measure_par)
###
### NAMESPACE
###

import(Modeler)

importFrom("methods", "new")

## various generics
importMethodsFrom(methods, "show")
importMethodsFrom(oompaBase, "summary")

exportMethods("show", "summary")

## xv00-utility
export("balancedSplit")

## xv02-CrossVal
exportClasses("CrossValidate", "CrossValSummary")
export("CrossValidate") # generator


## Partly produced via  codetoolsBioC::writeNamespaceImports()
## but that *misses* the  importClassesFrom(.) !

importFrom("graphics", mtext, par)
importFrom("methods", as, getAllSuperClasses, getClass, getClassDef,
           is, isClassDef, new, showExtends)
importFrom("utils", str)
importFrom("stats", "setNames")

importFrom("graph", ftM2graphNEL, validGraph,
	   plot)# the S4 generic {importMeth... below is *not* sufficient!}
importClassesFrom("graph", graphNEL)
importMethodsFrom("graph", edgeL, join, nodes, numNodes, plot)

importFrom("Rgraphviz", agopen, makeNodeAttrs)
importClassesFrom("Rgraphviz", Ragraph)
importMethodsFrom("Rgraphviz", plot)

## Re-export - S4 generic  {so it works with our objects, even when graph/graphViz are not attached}
export(plot)

export("classTree",
       "class2Graph",
       "bGraph", "mRagraph",
       "subClasses", "superClasses",
       "numOutEdges", # "is.leaf",
       "plotRag", ".optRagargs"
       )
#exportPattern("^[[:alpha:]]+")

importFrom(arm, display, fround, pfround, traceplot, bayesglm.fit, bayespolr)
importFrom(graphics, hist)
importFrom(Matrix, image)
importFrom(stats4, coef, plot, summary, vcov)
import(methods)
exportClassPattern("^[[:alpha:]]+")
exportMethods(change, change_family, change_link, change_model, change_imputation_method, 
              change_size, change_transformation, change_type,
              complete, fit_model, get_parameters, hist, image, 
              mi, missing_data.frame, missing_variable, plot)
export(display, mi2BUGS, mi2stata, mipply, multinomial, pool, 
       .prune, .possible_missing_variable, Rhats, rdata.frame)

S3method(as.double, missing_variable)
S3method(as.double, categorical)
S3method(as.double, continuous)
S3method(as.double, count)
S3method(as.double, irrelevant)
S3method(as.double, missing_data.frame)
S3method(as.data.frame, missing_data.frame)
S3method(dim, missing_data.frame)
S3method(dimnames, missing_data.frame)
S3method(names, missing_data.frame)
S3method(dim, mi)
S3method(dimnames, mi)
S3method(names, mi)
S3method(is.na, missing_variable)
S3method(is.na, missing_data.frame)
S3method(is.na, mi)
S3method(length, missing_variable)
S3method(length, missing_data.frame)
S3method(length, mi)
S3method(print, mdf_list)
S3method(print, mi_list)
S3method("[", missing_data.frame)
S3method("[<-", missing_data.frame)
S3method("[[", missing_data.frame)
S3method("[[<-", missing_data.frame)
S3method("$", missing_data.frame)
S3method("$<-", missing_data.frame)
